<h1>Applications</h1>


<% if current_user.is? :admin %>

<div class="well">
<%= simple_form_for '', :url => applications_path, :method => :get, :html => { :class => "form-inline", :role => "form" } do |f| %>
  <%= f.input :name, :label => false, :wrapper_html => {:class=> "col-md-3"}, input_html: { value: params[:name], :placeholder => "Name"} %>
  <%= f.input :email, :label => false, :wrapper_html => {:class=> "col-md-3"}, input_html: { value: params[:email], :placeholder => "Email"} %>
  Transcript <%= f.check_box :transcript, :checked => (params[:transcript] == '1') %> &nbsp;
  Signed <%= f.check_box :signed, :checked => (params[:signed] == '1') %> &nbsp;
  Essay <%= f.check_box :essay, :checked => (params[:essay] == '1') %> &nbsp;
  Reference <%= f.check_box :reference, :checked => (params[:reference] == '1') %> &nbsp;
<!--  Completed <%= f.check_box :completed, :checked => (params[:completed] == '1') %> &nbsp;-->
  <%= f.button :submit, 'Search', :class => "btn btn-primary" %>
<p><br>
Showing <%= @applications.count.is_a?(Integer) ? @applications.count : @applications.count.length %> records
</p>
</div>

<%end%>
<%end%>
<%= simple_form_for '', :url => edit_multiple_applications_path, :html => { :class => "form-inline", :role => "form" } do |f| %>
<% if current_user.is? :admin %>
<div class="well">
    <%= f.input :reviewer, :collection => User.with_role(:reviewer).order('LOWER(users.name)'), required: true, :label_html => {:style => "display: none;"}, :wrapper_html => {:class=> "col-md-3"}, prompt: "Assign reviewer..." %>
Replace Reviewers <%= f.check_box :replace_reviewers %> &nbsp;
  <%= f.button :submit, 'Apply', :class => "btn btn-primary" %>
    <%= f.input :transcript, as: :hidden, :input_html => {value: params['transcript']}%>
    <%= f.input :reference, as: :hidden, :input_html => {value: params['reference'] }%>
    <%= f.input :completed, as: :hidden, :input_html => {value: params['completed'] }%>
    <%= f.input :signed, as: :hidden, :input_html => {value: params['signed'] }%>
    <%= f.input :essay, as: :hidden, :input_html => {value: params['essay'] }%>

</div>
<% end %>
<%= will_paginate @applications, renderer: BootstrapPagination::Rails %>

<table class="table table-striped">
  <tr>
    <% if current_user.is? :admin %>
    <th><%= check_box_tag 'select_all_application_id', '', false %></th>
    <%end %>
    <th>Name</th>
    <% if current_user.is? :admin %>
        <th></th>
    <% end %>

    <% if current_user.is? :admin and !@review %>
    <th>Complete?</th>
    <th>Signed?</th>
    <th>Transcript?</th>
    <th>Reference?</th>
    <th>Blank<br>Fields?</th>
    <th>Reviewers</th>
    <th><%= link_to "Average Score", applications_path(:sort => 'score') %></th>
    <% end %>
    <% if current_user.is? :admin and @review %>
    <th><%= link_to "STEM?", params[:sort] == 'stem' ? applications_path(:sort => 'score') : applications_path(:sort => 'stem') %></th>
    <th><%= link_to "First Gen", params[:sort] == 'first_generation' ? applications_path(:sort => 'score') : applications_path(:sort => 'first_generation') %></th>
    <th>LGBT?</th>
    <th>Supporter?</th>
    <th>State</th>
    <th>Std Dev.</th>
    <th>Range</th>

    <th><%= link_to "Average Score", applications_path %></th>

    <% end %>
    <th>Scored?</th>
  </tr>
<%= hidden_field_tag :page, params[:page] %>
<% @applications.each do |application| %>
  <tr>
    <% if current_user.is? :admin %>
    <td><%= check_box_tag 'application_ids[]', application.id, false %></td>
    <%end%>
    <td><%=link_to glyph("file"), application_path(application) %>
     <% if can? :show, :user %>
      <%= link_to application.applicant.name, application.applicant unless application.applicant.blank? %>
     <% else %>
      <%= application.applicant.name unless application.applicant.blank? %>
     <% end %>
    </td>

    <% if current_user.has_role? :admin %>

    <td>
    <%= link_to glyph("pencil"), edit_application_path(application) if can? :edit, application %>
    <%= link_to glyph("trash"), application, method: :delete, data: { confirm: 'Are you sure?' } if can? :delete, application %>
    </td>
    <%end %>

    <% if current_user.is? :admin and !@review %>

    <td><%= application.incomplete? ? glyph("remove") : glyph("ok") %></td>
    <td><%= application.signed? ? glyph("ok") : glyph("remove") %></td>
    <td><%= application.transcript? ?
          (link_to glyph("ok"), edit_application_path(application, :anchor => "transcript")) :
          glyph("remove") %> </td>
    <td>
      <%= glyph("exclamation-sign",:title => "Multiple References") if application.references.completed.count > 1 %>
      <% reference = application.references.completed.first %>
      <%= link_to glyph("ok"), edit_reference_path(reference) unless reference.blank?  %>
      <% if current_user.is? :admin %>
      <%= link_to glyph("lock"), reference.token_url, title: "Private Reference Link for Manually emailing to reference" unless reference.blank? %>
      <% end %>
    </td>
    <td><span title="<%=application.blank_fields.join(", ") %>"><%= application.blank_fields_count %></span></td>
    <td><%= application.reviewers.map{|r| a = application.scores.find_by_user_id(r.id); "#{r.name}"+ ((" (#{a.total})" unless a.blank?) or "")}.join(", ") unless application.reviewers.blank? %></td>
    <td><%= number_with_precision application.average_score, :precision => 2 unless application.average_score.blank? %></td>
    <% end %>
    <% if current_user.is? :admin and @review %>
    <td><%= application.stem? ? glyph("ok") : glyph("remove") %></td>
    <td><%= application.first_generation? ? glyph("ok") : glyph("remove") %></td>
    <td><%= application.identify_lgbt? ? glyph("ok") : glyph("remove") %></td>
    <td><%= application.identify_supporter? ? glyph("ok") : glyph("remove") %></td>


    <td><%= application.state %></td>
    <td><%= number_with_precision application.scores_standard_deviation, :precision => 2 unless application.scores.blank? %></td>
    <td><%= number_with_precision application.scores_range, :precision => 2 unless application.scores.blank? %></td>
    <td><span title="<%= application.scores.map{|h| number_with_precision h.total, :precision => 2}.join(", ")  %>"><%= number_with_precision application.average_score, :precision => 2 unless application.average_score.blank? %></span></td>

    <% end %>

    <td><% application.scores.accessible_by(current_ability).each do |s| %>
      <%= glyph("ok") unless current_user.is? :admin%>
      <%= link_to glyph("pencil"), edit_score_path(s.id) %>
      <% end %>
      <% if application.scores.accessible_by(current_ability).count == 0 %>
        <%= glyph("exclamation-sign",:title => "Needs Scoring") %>
        <%= link_to "New Score", new_score_path(:application_id => application.id) %>
      <% end %>
    </td>
  </tr>
<% end %>
</table>

<%= will_paginate @applications, renderer: BootstrapPagination::Rails %>
<% end %>
<br />

    <%= link_to 'New Application', new_application_path, :class => 'btn btn-primary' unless (current_user.has_role? :student or current_user.has_role? :reviewer) && @applications.length > 0 %>


<% if current_user.has_role? :admin %>
    <%= link_to "Download CSV", applications_path(params.merge(:format => "csv")), :class => 'btn btn-primary'  %>
<%end%>
